
import java.util.*;
import java.io.*;

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.io.InputStream;
import java.util.Scanner;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;


public class SMHttpServer implements SM {

        private SM sm;


        public SM.OID getOID( byte[] oidbytes ) {
        	return null ;
        }


        /**
         *  Constructor for the MySM object
         *
         *@since
         */
        public SMHttpServer() {
                this.sm = SMFactory.getInstance();
        }



        /**
         *  Description of the Method
         *
         *@param  rec              Description of Parameter
         *@return                  Description of the Returned Value
         *@exception  IOException  Description of Exception
         *@since
         */
        public SM.OID store(Record rec) throws IOException {
                return sm.store(rec);
        }


        /**
         *  Description of the Method
         *
         *@param  oid                    Description of Parameter
         *@return                        Description of the Returned Value
         *@exception  NotFoundException  Description of Exception
         *@exception  IOException        Description of Exception
         *@since
         */
        public Record fetch(SM.OID oid) throws NotFoundException, IOException {
                return sm.fetch(oid);
        }


        /**
         *  Description of the Method
         *
         *@exception  SM.IOException  Description of Exception
         *@since
         */
        public void close() throws SM.IOException {
                sm.close();
        }


        /**
         *  Description of the Method
         *
         *@exception  SM.IOException  Description of Exception
         *@since
         */
        public void flush()  {
                try { sm.flush(); } catch (Exception e) {}
        }



        /**
         *  Description of the Method
         *
         *@param  oid                    Description of Parameter
         *@param  rec                    Description of Parameter
         *@return                        Description of the Returned Value
         *@exception  NotFoundException  Description of Exception
         *@exception  IOException        Description of Exception
         *@since
         */
        public SM.OID update(SM.OID oid, Record rec) throws NotFoundException, IOException {
                return sm.update(oid, rec);
        }


        /**
         *  Description of the Method
         *
         *@param  oid                        Description of Parameter
         *@exception  NotFoundException      Description of Exception
         *@exception  CannotDeleteException  Description of Exception
         *@since
         */
        public void delete(SM.OID oid) throws NotFoundException, CannotDeleteException {
                sm.delete(oid);
        }



	public static void main(String[] args) throws Exception {
		HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0);
		server.createContext("/", new MyHandler());
		server.setExecutor(null); // creates a default executor
		server.start();
		System.out.println("[INFO]: HTTP Server started at port 8080");
		System.out.println("========================================");
	}



	static class MyHandler implements HttpHandler {
		public void handle(HttpExchange msg) {
			System.out.println("[INFO]: URI: "+ msg.getRequestURI());
			System.out.println("[INFO]: METHOD: "+ msg.getRequestMethod());
			
                        String body = new Scanner(msg.getRequestBody(),"UTF-8").useDelimiter("\\A").next();
                        System.out.println("[INFO]: BODY: "+ body);

			String response = " ";

			switch(msg.getRequestMethod()){
         			case "POST":    System.out.println("[INFO]: POST request received");
                      		                response = "200 OK received\n";
                      		                break;
				case "GET":     System.out.println("[INFO]: GET request received");
                           	     	        response = "200 OK received\n";
                                      	        break;
         			case "PUT":     System.out.println("[INFO]: PUT request received");
                      		                response = "200 OK received\n";
                      		                break;
         			case "DELETE":  System.out.println("[INFO]: DELETE request received");
                      		                response = "200 OK received\n";
                     		                break;
         			default:        System.out.println("[ERROR]: Method Not Supported");
                                     	        response = "Method Not Supported\n";

      		        }
			try{
      				msg.sendResponseHeaders(200, response.length());
			} catch(IOException e){
  				e.printStackTrace();
			}
      			//msg.sendResponseHeaders(200, response.length());
      			OutputStream os = msg.getResponseBody();
      			os.write(response.getBytes());
      			os.close();
    		}
  	}

}
